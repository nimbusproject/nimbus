
[images]

# local image repository directory
#   - If a relative path is specified at the cmd line, this is the root dir
#     where the program begins to look for the image to instantiate
#   - It only makes sense to put read-only images here since multiple clients
#     could specify the same image to use simultaneously (unless there is
#     coordination at a higher level or via service authz callout). 
#   - if this setting is a relative path, it will be resolved from the
#     workspace-control specific var directory (see "dirs.conf")

localdir: images


# secure propagation directory
#   - this directory is where instance specific images that have been
#     retrieved with the propagation code are placed
#   - this must be separate from localdir to ensure that a random Nimbus user
#     can not specify any image that has been propagated to this node (localdir
#     intent is more for an admin to test with or for caching read-only images)
#   - if this setting is a relative path, it will be resolved from the
#     workspace-control specific var directory (see "dirs.conf")

securelocaldir: secureimages

# blankspace partition directory
#   - this directory is where instance specific images that use blankspace
#     will create their partition
#   - this can be the same or separate from the securelocaldir for performance
#   - if left blank if will default to the securelocaldir location
#   - if this setting is a relative path, it will be resolved from the
#     workspace-control specific var directory (see "dirs.conf")

blankspacedir: secureimages

# blankcreate script
#   - this is called when making a blankspace partition.  This is not called
#     under sudo.  It's just separated into a script for easier replacement or
#     customization.
#   - if this setting is a relative path, it will be resolved from the
#     workspace-control specific libexec directory (see "dirs.conf")
#   - if this setting is missing or blank, the blankspace functionality will
#     be disabled

blankcreate: blankcreate.sh

# the image cache directory
#   - this is the directory where images are cached.  When an image is 
#     propagated it is put in this cache.  Prior to propagation (and if
#     the --cachecksum option is used) the cache is checked to see
#     if the image is already local.
#   - this directory has the same constraints as securelocaldir
#   - this directory can not be a path on a network file system
#   - the max size (in bytes) of the cache can be set, 0 (default) sets it
#     to unlimited

#cachedir: imagecache
#cache_size: 0


# -------------------------------------------------------------------------

[tmplease]

# *Experimental*
#
# Enabling this preliminary feature lets you configure a list of physical
# partitions to "lease" to incoming VMs.
#
# *WARNING* Configure the list of physical partitions carefully.  They are
# formatted every time they are used!
#
# The partition list path is configured directly at the top of the
# "tmp-lease-alter.py" script since it is sensitive information that
# should not be passed in by an unprivileged user.
#
# When enabled is 'true' the feature is enabled.
enabled:


# This is the partition or disk to 'present' to every VM for tmp space if this
# feature is enabled.  Must use the 4 letter version, e.g. "sda2", for Xen, and
# the 3 letter version, e.g. "hdb", for KVM.

vmpartition: sda2


# Control if you want the program to fail entirely if a request already
# has a partition target that would make the 'vmpartition' injection
# impossible.  When set to 'true', it will reject requests.  Any other
# setting and it will just NOT cause the temp space to be leased or mounted,
# it will just log a warning.

fail_if_present: false


# This is called via sudo to adjust the physical partitions if this feature
# is enabled.
#
# It is called under sudo.  A relevant entry for it must be configured in the
# sudoers file, for example:
#
# nimbus ALL=(root) NOPASSWD: /opt/nimbus/libexec/workspace-control/tmp-lease.sh
#
# Because it is called under sudo, that program, these conf files, and all
# enclosing directories should be owned by root.
#
# If this setting is a relative path, it will be resolved from the
# workspace-control specific libexec directory (see "dirs.conf")

tmplease: tmp-lease.sh


